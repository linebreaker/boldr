{"version":3,"sources":["src/cli.js"],"names":[],"mappings":";;AAAA;;;;AACA;;;;AACA;;AAQA;;;;;;AAEA,8BAAe,EAAE,sBAAF,EAAf,EAAwB,MAAxB;;AAEA,MAAM,UAAU,kBAAI,OAApB;AACA;AAGE;AAHF,CAAQ,MAAR,GAAiB,SAAU,OAAO,KAAP,KAAiB,QAAjB,GAA4B,KAA5B,GAAoC,IAA/D;;AAEA,kBAEG,OAFH,CAEW,OAFX,EAGG,WAHH,CAGe,uDAHf;;AAKA,kBAAQ,OAAR,CAAgB,SAAhB,EAA2B,0BAA3B,EAAuD,KAAvD,CAA6D,KAA7D,EAAoE,MAApE,CAA2E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAKhE,KALgE,EAKzD;AAAA;AACd,cAAQ,GAAR,CAAY,KAAZ;AACA,cAAQ,IAAR,CAAa,CAAb;AAFc;AAAA;AAAA;AAAA;AAGf,GARwE;AACzE,MAAI;AACW,2BAAM,8BAAN;AAAA;AAAqB,+BAAM,8BAAN;AAAA;AAAqB,mCAAM,iCAAN;AAAA;AAAvD,wBAAQ,GAAR,CAAY,CAAC,QAAD,EAAsB,QAAtB,EAA2C,QAA3C,CAAZ,EAAgF,KAAhF,CAAsF,OACpF,QAAQ,GAAR,CAAY,GAAZ,CADF;AAAuD;AAAA;AAAA;AAAA;AAAA;AAArB;AAAA;AAAA;AAAA;AAArB;AAAA;AAAA;AAAA;AAGd,GAJD,CAIE,OAAO,KAAP,EAAc;AAAA,iBAAP,KAAO;AAGf;AARwE,aAA3E;AAUA,kBAAQ,OAAR,CAAgB,OAAhB,EAAyB,sBAAzB,EAAiD,MAAjD,CAAwD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAG7C,KAH6C,EAGtC;AAAA;AACd,cAAQ,GAAR,CAAY,KAAZ;AACA,cAAQ,IAAR,CAAa,CAAb;AAFc;AAAA;AAAA;AAAA;AAGf,GANqD;AACtD,MAAI;AACW,2BAAM,8BAAN;AAAA;AAAqB,+BAAM,8BAAN;AAAA;AAAlC,oBAAQ,GAAR,CAAY,CAAC,QAAD,EAAsB,QAAtB,CAAZ,EAAwD,KAAxD,CAA8D,OAAO,QAAQ,GAAR,CAAY,GAAZ,CAArE;AAAkC;AAAA;AAAA;AAAA;AAAA;AAArB;AAAA;AAAA;AAAA;AACd,GAFD,CAEE,OAAO,KAAP,EAAc;AAAA,iBAAP,KAAO;AAGf;AANqD,aAAxD;AAQA,kBAAQ,OAAR,CAAgB,OAAhB,EAAyB,oDAAzB,EAA+E,MAA/E,CAAsF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAQ3E,KAR2E,EAQpE;AAAA;AACd,cAAQ,GAAR,CAAY,KAAZ;AACA,cAAQ,IAAR,CAAa,CAAb;AAFc;AAAA;AAAA;AAAA;AAGf,GAXmF;AACpF,MAAI;AAEA,2BAAM,8BAAN;AAAA;AACA,+BAAM,8BAAN;AAAA;AACA,mCAAM,8BAAN;AAAA;AACA,uCAAM,8BAAN;AAAA;AAJF,4BAAQ,GAAR,CAAY,CACV,SADU,EAEV,SAFU,EAGV,SAHU,EAIV,SAJU,CAAZ,EAKG,KALH,CAKS,OAAO,QAAQ,GAAR,CAAY,GAAZ,CALhB;AAIE;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAKH,GAPD,CAOE,OAAO,KAAP,EAAc;AAAA,iBAAP,KAAO;AAGf;AAXmF,aAAtF;AAaA,kBAAQ,OAAR,CAAgB,WAAhB,EAA6B,gDAA7B,EAA+E,MAA/E,CAAsF,MAAM;AAC1F,MAAI;AACF;AACD,GAFD,CAEE,OAAO,KAAP,EAAc;AACd,YAAQ,GAAR,CAAY,KAAZ;AACA,YAAQ,IAAR,CAAa,CAAb;AACD;AACF,CAPD;;AASA,kBAAQ,KAAR,CAAc,QAAQ,IAAtB","file":"boldr.js","sourcesContent":["import program from 'caporal';\nimport updateNotifier from 'update-notifier';\nimport {\n  cleanClient,\n  cleanServer,\n  startRenderServer,\n  buildClient,\n  buildServer,\n  startDevServer,\n} from 'boldr-tools';\nimport pkg from '../package.json';\n\nupdateNotifier({ pkg }).notify();\n\nconst VERSION = pkg.version;\nprogram.STRING = value => (typeof value === 'string' ? value : null);\n\nprogram\n  // default command\n  .version(VERSION)\n  .description('A command line scaffolding tool and helper for Boldr.');\n\nprogram.command('develop', 'Start development server').alias('dev').action(async () => {\n  try {\n    Promise.all([await cleanClient(), await cleanServer(), await startDevServer()]).catch(err =>\n      console.log(err),\n    );\n  } catch (error) {\n    console.log(error);\n    process.exit(1);\n  }\n});\nprogram.command('clean', 'Clean compiled files').action(async () => {\n  try {\n    Promise.all([await cleanClient(), await cleanServer()]).catch(err => console.log(err));\n  } catch (error) {\n    console.log(error);\n    process.exit(1);\n  }\n});\nprogram.command('build', 'Build the client and server bundles for production').action(async () => {\n  try {\n    Promise.all([\n      await cleanClient(),\n      await cleanServer(),\n      await buildClient(),\n      await buildServer(),\n    ]).catch(err => console.log(err));\n  } catch (error) {\n    console.log(error);\n    process.exit(1);\n  }\n});\nprogram.command('start:ssr', 'Start the application rendernig on the server.').action(() => {\n  try {\n    startRenderServer();\n  } catch (error) {\n    console.log(error);\n    process.exit(1);\n  }\n});\n\nprogram.parse(process.argv);\n"]}